<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="/styles/dashboard.css">
    <style>
        .confirm-code {
            display: none;
            text-align: center;
            margin-top: 30px;
        }

        .confirm-code input {
            padding: 10px;
            font-size: 16px;
            width: 100px;
            text-align: center;
            letter-spacing: 5px;
        }

        .confirm-code button {
            padding: 10px 20px;
            margin-left: 10px;
            font-size: 16px;
            cursor: pointer;
        }

        .error-message {
            color: red;
            margin-top: 10px;
        }

        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.4);
            padding-top: 60px;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            width: 300px;
            text-align: center;
        }

        .modal-content input {
            padding: 10px;
            font-size: 16px;
            width: 100%;
            text-align: center;
        }

        .modal-content button {
            padding: 10px 20px;
            margin-top: 10px;
            font-size: 16px;
            cursor: pointer;
            background-color: #00bfae;
            border: none;
            color: white;
            border-radius: 8px;
        }

        .modal-content button:hover {
            background-color: #00a29d;
        }

        .modal-content p {
            font-size: 16px;
            margin-top: 10px;
        }
    </style>
</head>

<body>
    <div class="nav">
        <div class="logo">
            <h2>NOURISHNET</h2>
        </div>
        <div class="menu">
            <ul>
                <li><a href="/">HOME</a></li>
                <li><a href="/about">ABOUT</a></li>
                <li><a href="/contact">CONTACT</a></li>
                <li><a href="/login">LOGOUT</a></li>
                <li><a href=""><img style="height:30px; width:30px;" src="profile-picture.png" alt="PROFILE"></a></li>
            </ul>
        </div>
    </div>

    <div class="content">
        <h1>Food Donations</h1>
        <div class="food-container">
            <% foodEntries.forEach(food => { %>
                <div class="food-card" id="food-<%= food._id %>">
                    <h2><%= food.name %> - <%= food.foodType %></h2>
                    <button onclick="openModal('<%= food._id %>', <%= food.quantity %>)">ACCEPT</button>
                    <p>Quantity: <%= food.quantity %> persons</p>
                    <p>Fresh Span: <%= food.freshSpan %> hours</p>
                    <p>Location: <%= food.locationDescription %></p>
                </div>
            <% }); %>
        </div>
    </div>

    <div class="display2">
        <h1>Accepted Food Donations</h1>
        <div class="food-container">
            <% acceptedFoodEntries.forEach(food => { %>
                <div class="food-card" id="accepted-food-<%= food._id %>">
                    <h2><%= food.name %> - <%= food.foodType %></h2>
                    <p>Quantity: <%= food.quantity %> persons</p>
                    <p>Fresh Span: <%= food.freshSpan %> hours</p>
                    <p>Location: <%= food.locationDescription %></p>
                </div>
            <% }); %>
        </div>
    </div>

    <!-- Modal for Quantity Input -->
    <div id="quantityModal" class="modal">
        <div class="modal-content">
            <h2>Enter Quantity to Accept</h2>
            <input type="number" id="modalQuantityInput" min="1" />
            <p id="rangeError" style="color: red; display: none;">Please enter a valid quantity.</p>
            <button onclick="submitQuantity()">Submit</button>
        </div>
    </div>

    <!-- Confirmation Code Section -->
    <div class="confirm-code" id="confirmCodeBox">
        <h2 style="color: black;">Enter 4-digit Confirmation Code</h2>
        <input type="text" id="codeInput" maxlength="4" />
        <button onclick="submitCode()">Submit</button>
        <div class="error-message" id="codeError"></div>
    </div>

    <script>
        const hasAcceptedFood = <%= acceptedFoodEntries && acceptedFoodEntries.length > 0 ? 'true' : 'false' %>;
    </script>

    <script>
        let currentFoodId = null;
        let currentFoodMaxQuantity = 0;

        function openModal(foodId, maxQuantity) {
            currentFoodId = foodId;
            currentFoodMaxQuantity = maxQuantity;

            const modal = document.getElementById("quantityModal");
            const quantityInput = document.getElementById("modalQuantityInput");
            const errorDisplay = document.getElementById("rangeError");

            quantityInput.value = 1;
            quantityInput.min = 1;
            quantityInput.max = maxQuantity;
            errorDisplay.style.display = "none";
            errorDisplay.textContent = `Please enter a valid quantity between 1 and ${maxQuantity}.`;

            modal.style.display = "flex";
        }

        function closeModal() {
            const modal = document.getElementById("quantityModal");
            modal.style.display = "none";
        }

        async function submitQuantity() {
            const quantityInput = document.getElementById("modalQuantityInput");
            const quantity = parseInt(quantityInput.value);
            const errorDisplay = document.getElementById("rangeError");

            if (isNaN(quantity) || quantity < 1 || quantity > currentFoodMaxQuantity) {
                errorDisplay.style.display = "block";
                return;
            }

            errorDisplay.style.display = "none";

            if (!confirm("Are you sure you want to accept this food entry?")) return;

            try {
                const response = await fetch(`/delete-food/${currentFoodId}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ quantity })
                });

                const data = await response.json();

                if (response.ok) {
                    if (data.updatedFood) {
                        const card = document.getElementById(`food-${currentFoodId}`);
                        const quantityParagraph = card.querySelector("p:nth-of-type(1)");
                        quantityParagraph.textContent = `Quantity: ${data.updatedFood.quantity} persons`;
                    } else {
                        document.getElementById(`food-${currentFoodId}`).remove();
                    }

                    document.querySelector('.content').style.display = "none";
                    document.querySelector('.display2').style.display = "block";
                    document.getElementById('confirmCodeBox').style.display = "block";
                } else {
                    alert(data.error || "Failed to accept food request. Please try again.");
                }

                closeModal();
                window.location.reload();
            } catch (error) {
                console.error("Error:", error);
                alert("An error occurred while processing the food entry.");
            }
        }

        async function submitCode() {
            const codeInput = document.getElementById("codeInput").value;
            const errorMsg = document.getElementById("codeError");

            if (codeInput === "1234") {
                try {
                    const response = await fetch("/clear-accepted-food", {
                        method: "POST"
                    });

                    if (!response.ok) {
                        throw new Error("Failed to clear accepted food");
                    }

                    document.querySelector('.content').style.display = "block";
                    document.querySelector('.display2').style.display = "none";
                    document.getElementById('confirmCodeBox').style.display = "none";
                    document.getElementById("codeInput").value = "";
                    errorMsg.textContent = "";

                } catch (err) {
                    console.error("Error clearing accepted food:", err);
                    errorMsg.textContent = "Error clearing accepted food. Please try again.";
                }

            } else {
                errorMsg.textContent = "Incorrect code. Try again.";
            }
        }

        window.onload = function () {
            if (!hasAcceptedFood) {
                document.querySelector('.display2').style.display = "none";
                document.querySelector('.content').style.display = "block";
                document.getElementById('confirmCodeBox').style.display = "none";
            } else {
                document.querySelector('.display2').style.display = "block";
                document.querySelector('.content').style.display = "none";
                document.getElementById('confirmCodeBox').style.display = "block";
            }
        };
    </script>
</body>

</html>
